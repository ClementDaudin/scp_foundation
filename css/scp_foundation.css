.sheet {
    text-transform: capitalize;
    min-width: min-content;
}
.sheet header.sheet-header {
    align-items: start;
    flex: 0;
}
.sheet-rolltemplate-scp{
    overflow: scroll;
    font-size: 13px;
    background-color: white;
  }

.sheet-rolltemplate-scp #summary{
    min-width: max-content;
}
.level-1 {
    --backColor: #6abd47;
    --selectColor: var(--backColor);
    --selectShadow: none;
    --buttonBackColor: white;
}
.level-2{
    --backColor: #4f72b7;
    --selectColor: var(--backColor);
    --selectShadow: none;
    --buttonBackColor: white;

}
.level-3 {
    --backColor: #ef6024;
    --selectColor: var(--backColor);
    --selectShadow: none;
    --buttonBackColor: white;

}
.level-4 {
    --backColor: #ed2025;
    --selectColor: var(--backColor);
    --selectShadow: none;
    --buttonBackColor: white;

}
.level-5 {
    --backColor: #7d52a1;
    --selectColor: var(--backColor);
    --selectShadow: none;
    --buttonBackColor: white;

}
.level-6 {
    --backColor: #000000;
    --borderColor: white;
    --fontColor: #ededed;
    --buttonBackColor: #000000;

}
.sheet-rolltemplate-scp .sheet-body select, .sheet-rolltemplate-scp input, .sheet-rolltemplate-scp .uneditable-input, .sheet-rolltemplate-scp label, .sheet-rolltemplate-scp button {
    all: unset;
}
input[type="checkbox"] {
    background-color: initial;
    cursor: default;
    appearance: auto;
    box-sizing: border-box;
    margin: 3px 3px 3px 4px;
    padding: initial;
    border: initial;
}
.sheet-rolltemplate-scp {
    --grid-gap: 1em;
    --half-gap: calc(var(--grid-gap) / 2);
    --tiny-gap: calc(var(--half-gap) / 2);
    position: relative;
    gap: var(--grid-gap);
    --revealTime: 500ms;
    --delayTime: 200ms;
    --inputSwap: opacity var(--revealTime) ease var(--delayTime);
    --focusTrans: all 500ms ease var(--delayTime);
    --borderColor: black;
    --fontColor: black;
    --backColor: #636363;
    --selectColor: var(--backColor);
    --selectShadow: none;
}
.sheet-rolltemplate-scp .sheet-body {
    --selectedRadio: grey;
    --fillTrackRadioHeight: 2em;
    --fillTrackRadioWidth: 1em;
    --fillTrackSpanWidth: 1em;
    --fillTrackSpanHeight: 0.5em;
    --fillItemFlex: 0 0 auto;
    --track-gap: var(--tiny-gap);
}

#summary{
    position: sticky;
    top: 0px;
    z-index: 110;
    grid-area: summary;
    background-color: var(--backColor);
    border-radius: 10px 10px 0 0;
    border-width: 2px 5px;
    border-style: solid;
    border-color: black;
    color: var(--fontColor);
    filter: drop-shadow(0px -10px white);
    padding: 5px;
    display: grid;
    grid-template-columns: 1fr [strength-start fate-start] auto [strength-end fate-end health-start charisma-start] auto [health-end charisma-end perception-start intelligence-start] auto [perception-end intelligence-end dexterity-start willpower-start] auto [dexterity-end willpower-end];
    grid-template-rows: [strength-start health-start perception-start dexterity-start] 1em [fate-start charisma-start intelligence-start willpower-start] 1em [strength-end health-end perception-end dexterity-end] 1em [fate-end charisma-end intelligence-end willpower-end];
    grid-template-areas:
        "character_name . . . ."
        "character_name . . . ."
        "alias . . . .";
}
#summary .character_name{
    grid-area: character_name;
}
#summary .alias{
    grid-area: alias;
}
#summary .h4, #summary .h5{
    line-height: 0;
    place-self: center;
}
#summary > .ability-summary {
    align-self: center;
    display: grid;
    grid-template-columns: 2.5em repeat(3, 1em auto);
}
#summary > .strength {
    grid-area: strength;
}
#summary > .health {
    grid-area: health;
}
#summary > .perception {
    grid-area: perception;
}
#summary > .dexterity {
    grid-area: dexterity;
}
#summary > .fate {
    grid-area: fate;
}
#summary > .charisma {
    grid-area: charisma;
}
#summary > .intelligence {
    grid-area: intelligence;
}
#summary > .willpower {
    grid-area: willpower;
}
#summary > .ability-summary > .die-num {
    justify-self: end;
}
#summary > .ability-summary > .perks {
    margin: 0 0.5em 0.5em;
}


.h4{
    font-size: 1.5em;
    font-weight: bold;
    display: block;
}

#attributes {
    float: left; /* Utilisez float pour positionner la colonne Ã  gauche */
    --track-gap: 0;
    --fillItemFlex: 1 1 0;
    margin-right: 10px;
}
#attributes > .ability_score {
    position: relative;
    display: grid;
    grid-template-columns: 3em 10em;
    grid-template-rows: repeat(4, auto);
    grid-template-areas:
        "header header "
        "d8 ."
        "d10 ."
        "d12 .";
    place-self: center;
    margin-bottom: var(--grid-gap);
    border: 1px solid black;
}
#attributes > .ability_score .attribute {
    grid-area: header;
    text-align: center;
}
#attributes > .ability_score h5 , #attributes > .ability_score .attribute, #attributes > .ability_score h5 {
    border: 1px solid black;
    line-height: var(--fillTrackRadioHeight);
    text-align: center;
    background-color: white;
    margin: 0;
}
#attributes > .available-dice {
    grid-column: 1/-1;
    background-color: white;
}
#attributes:not(.active-section) > .available-dice {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--half-gap);
    margin-bottom: var(--grid-gap);
    z-index: 100;
}
#attributes:not(.active-section) > .available-dice, .sticky-sub {
    top: -8px;
    position: sticky;
    z-index: 100;
}
#attributes:not(.active-section) > .available-dice h4 {
    grid-column: 1/-1;
}
#attributes > .available-dice > button[type=action] {
    box-shadow: inset 0 0 5px black;
    color: black;
    border-radius: 5px;
    padding: 3px 5px;
    display: flex;
    justify-content: center;
    transition: var(--focusTrans);
}

.fillTrack {
    position: relative;
    display: inline-flex;
    gap: var(--track-gap);
    align-items: center;
}
.fillTrack .separated-label:checked ~ .separated-label, .fillTrack .separated-span:checked ~ .separated-label {
    order: 3;
    background-color: white;
}
.fillTrack .separated-label, .fillTrack .separated-span {
    appearance: none;
    border: 1px solid black;
    background-color: var(--selectedRadio);
    order: 1;
    border-radius: 0;
    flex: var(--fillItemFlex);
    box-sizing: content-box;
}
.fillTrack .separated-label {
    width: var(--fillTrackRadioWidth);
    height: var(--fillTrackRadioHeight);
}
.fillTrack .separated-label {
    cursor: pointer;
}

input[type="radio"] {
    position: relative;
    margin: 0;
}

.roll-label {
    cursor: pointer;
    --beforeColor: grey;
    display: grid;
    grid-template-columns: auto auto;
    grid-template-rows: auto;
    place-items: center start;
    place-content: center;
}

.sheet-body h4:not(input){
    text-align: center;
    font-size: 1.5em;
    font-weight: bold;
}
.sheet-rolltemplate-scp button {
    font-weight: bold;
    cursor: pointer;
}


.main{
    display: grid;
}
.main .player_data{
    display:flex;
    justify-content: space-between;
}
.main .charactere_stats{
    display:flex;
    justify-content: space-between;
}
.main .boxData{
    display: inline-block;
    width: 30%;
}
.main .boxed{
    height:60px;
    margin: 5px;
    text-align: center;
}
.main h5, .main .h5, .main button[type=roll].h5, .main button[type=action].h5, .main h4, .main .h4, .main button[type=roll].h4, .main button[type=action].h4, .main h3, .main .h3, .main button[type=roll].h3, .main button[type=action].h3, .main .input-label.large > input, .main .h2, .main button[type=roll].h2, .main button[type=action].h2, #security_level > .head .security_level > input, .main h1, .main .h1, .main button[type=roll].h1, .main button[type=action].h1{
    font-weight: bold;
    line-height: normal;
    display: block;
    white-space: nowrap;
}
.main .boxed.thick-right{
    border-right-width: 5px;
}
.main .boxed.thick-bottom{
    border-bottom-width: 5px;
}
.main .boxed.thick-left{
    border-left-width: 5px;
}
.main .boxed.thick-top{
    border-top-width: 5px;
}
.main .boxed, .sheet-rolltemplate-scp .boxed {
    border: 1px solid black;
}
.main .input-label:not(:is(.stacked, .right)), .sheet-rolltemplate-scp .input-label:not(:is(.stacked, .right)) {
    grid-template-columns: auto 1fr;
    grid-template-rows: auto;
    grid-template-areas: "left right";
}
.main .input-label, .sheet-rolltemplate-scp .input-label {
    display: inline-grid;
    grid-gap: var(--half-gap);
    place-items: center stretch;
}
.main input.number, .sheet-rolltemplate-scp input.number {
    -moz-appearance: textfield !important;
    text-align: center;
}
.main .input-label > *, .sheet-rolltemplate-scp .input-label > * {
    margin: 0;
}
.main .input-label:not(:is(.stacked, .right)) > span, .sheet-rolltemplate-scp .input-label:not(:is(.stacked, .right)) > span {
    grid-area: left;
}
.main h4, .main h5, .main h6 {
    line-height: 18px;
}
.main h1, .main h2, .main h3, .main h4, .main h5, .main h6 {
    margin: 0;
    font-weight: bold;
    color: #333;
    text-rendering: optimizelegibility;
}
.main .help {
    grid-area: help;
    white-space: pre-wrap;
    font-size: 0.5em;
}
.main .input-label.stacked, .sheet-rolltemplate-scp .input-label.stacked {
    grid-template-columns: auto;
    grid-template-areas:
        "over"
        "under";
}
.main .charactere_character {
    display: flex;
}
.main .fillTrack .separated-span {
    width: var(--fillTrackSpanWidth);
    height: var(--fillTrackSpanHeight);
}

.sheet-body :is(span, label){
    line-height: normal;
}


.market{
    vertical-align: top;
}
input.h5 {
    width: 100%;
}

#reverence {
    display: inline-grid;
    width: 10em;
    grid-template-columns: auto;
    grid-template-rows: 2em 2em 1fr;
    grid-row-gap: var(--half-gap);
    grid-template-areas:
        "header"
        "."
        "help";
    background-color: teal;
    background: radial-gradient(transparent, 80%, grey), linear-gradient(90deg, teal, white, teal);
    border: 2px solid black;
    margin: 5px;
}
#reverence > .fillTrack {
    place-self: center;
}
#reverence .help {
    background-color: grey;
}

.exertion{
    display: inline-block;
}
.exertionMax > .unused{
    background-color: white;
}
#exertion {
    display: inline-grid;
    width: 10em;
    grid-template-rows: 2em 1em 0.25em 1fr;
    grid-row-gap: 5px;
    grid-template-areas:
        "header"
        "."
        "."
        "help";
    border: 2px solid black;
    background-color: teal;
    background: radial-gradient(transparent, 80%, grey), linear-gradient(90deg, #ca6866, white, #ca6866);
    --fillTrackRadioHeight: 1em;
    margin: 5px;
}
#exertion .help {
    background-color: grey;
}
#exertion > .fillTrack {
    place-self: center;
}

.stats{
    display: inline-block;
}


.underlined, .sheet-rolltemplate-scp .underlined {
    border-radius: 5px 5px 0 0;
    border-bottom: 1px solid black;
    transition: var(--focusTrans);
}

.fillTrack .separated-label:checked, #main .fillTrack .separated-span:checked {
    display: none;
}

.character_row_first, .character_row_other{
    display: flex;
    justify-content: space-between;
}

.character_row_first label, .character_row_other label{
    width: 100%;
}

.character_row_first div{
    width: 49%;
}


.character_row_other > div{
    width: 32%;
}

.personnel_button{
    display: flex;
    place-self: start center;
}

.character_row_personnel{
    display: flex;
    justify-content: space-between;
    margin: 5px;
}

.character_row_card{
    display: flex;
    height: auto;
}



.personnel-label {
    border: 1px;
    display: block;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    text-align: center;
    line-height: 30px;
    cursor: pointer;
    border-style: solid;
    font-size: small;
}

input[type="radio"]:checked + .personnel-label {
    background-color: black;
    color: white;
}
.personnel_class{
    display: grid;
    text-align: center;
    grid-auto-rows: max-content;
    width: 50%;
}
.credit{
    width: auto;
    height: auto;
}
#credits{
    height: auto;
}
.personnel_button label{
    margin: 0 0.5em
}

#security_level {
    place-self: start center;
    display: grid;
    grid-template-columns: 6em auto;
    grid-template-rows: auto auto auto;
    grid-template-areas:
        "head head"
        "qr-code merit"
        "qr-code id";
    border-radius: 10px;
    border-width: 2px 3px 3px 2px;
    border: solid black;
    overflow: hidden;
}

#security_level > .head {
    --scpSize: 5em;
    background-color: var(--backColor);
    transition: var(--focusTrans);
    grid-area: head;
    display: grid;
    grid-template-columns: 10em 5em 1fr;
    grid-template-rows: calc(var(--scpSize) - 1em) 2em;
    grid-template-areas:
        "header logo level"
        "sub . level";
    border-bottom: 2px solid var(--borderColor);
}
#security_level > .head > .header {
    grid-area: header;
    font-size: var(--scpSize);
    text-transform: uppercase;
    place-self: start center;
    line-height: calc(var(--scpSize) - 4em);
}
#security_level > .head .sub-header {
    font-family: Baumans;
    grid-area: sub;
    font-size: calc(var(--scpSize) * 0.15);
}
#security_level > .head .transparent-logo {
    grid-area: logo;
    width: 100%;
}
.transparent-logo{
    aspect-ratio: 1/1;
    background-image: url(https://s3.amazonaws.com/files.d20.io/images/237119631/qha_0dNwFDUbYjLIGp2SCg/original.png);
    background-repeat: no-repeat;
    background-size: contain;
}


#security_level > .head .security_level {
    grid-area: level;
    place-items: center;
    gap: 0px;
    place-self: center;
}
.input-label.stacked{
    grid-template-columns: auto;
    grid-template-areas:
        "over"
        "under";
}
#security_level > .qr-code {
    grid-area: qr-code;
    background-image: url(https://s3.amazonaws.com/files.d20.io/images/237721889/dzJg1nel3HT7J2OhxtWBJg/thumb.png);
    background-repeat: no-repeat;
    background-size: contain;
    place-self: center;
    width: 100%;
    aspect-ratio: 1/1;
}
#security_level > .merit {
    --selectedRadio: var(--backColor);
    --track-gap: calc(var(--tiny-gap) / 2);
    grid-area: merit;
    display: grid;
    grid-template-columns: 3em 1fr;
    grid-template-rows: auto;
    grid-template-areas: "header tracker";
    grid-gap: var(--half-gap);
    padding-right: var(--half-gap);
}
#security_level > .merit > h5 {
    place-self: center;
    white-space: pre-wrap;
    place-self: center;
}
#security_level > .merit > .fillTrack {
    place-self: center;
    grid-auto-columns: 0.9em;
}
#security_level > .merit > .fillTrack > .separated-label {
    filter: drop-shadow(-1px 0px 0 black) drop-shadow(1px 0px 0 black) drop-shadow(0px -1px 0 black) drop-shadow(0px 1px 0 black);
    background-color: transparent !important;
    border: 0px solid transparent;
}
#security_level > .id {
    padding: 5px 0 0 5px;
    display: grid;
    --arrowsize: 1.5em;
    grid-template-columns: 3em 1fr;
    grid-template-rows: 3.5em;
    grid-column-gap: var(--half-gap);
    grid-template-areas: "logo id";
    background-color: var(--backColor);
    transition: var(--focusTrans);
    grid-area: id;
    border: solid var(--borderColor);
    border-width: 2px 0 0 2px;
}

.black-logo {
    aspect-ratio: 1/1;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "content";
}
.black-logo > .black-diamond, .black-logo .sheet-black-diamond, .sheet-black-logo > .black-diamond, .sheet-black-logo .sheet-black-diamond{
    grid-area: content;
    background-color: var(--fontColor);
    width: 100%;
    height: 100%;
    transform: scale(0.75) rotate(45deg);
}

.black-logo > .logo, #main .black-logo .sheet-logo, #main .sheet-black-logo > .logo, #main .sheet-black-logo .sheet-logo, .sheet-rolltemplate-scp .black-logo > .logo, .sheet-rolltemplate-scp .black-logo .sheet-logo, .sheet-rolltemplate-scp .sheet-black-logo > .logo, .sheet-rolltemplate-scp .sheet-black-logo .sheet-logo {
    grid-area: content;
    background-image: url(https://s3.amazonaws.com/files.d20.io/images/237119632/ALMH-rWYBVVqwtIQI970xw/original.png);
    background-repeat: no-repeat;
    background-size: contain;
    z-index: 10;
}
#security_level > .id > span[name*=attr] {
    place-self: start center;
    font-size: 0.65em;
    place-self: center;
}
#security_level > .head .security_level > input {
    width: 1.5em;
    height: 1.5em;
    place-self: start center;
    background-color: white;
    color: black;
}

#security_level > .merit > .fillTrack > .separated-label:before {
    clip-path: polygon(45% 0, 100% 50%, 45% 100%, 0% 100%, 55% 50%, 0% 0%);
    grid-area: b;
    position: absolute;
    content: "";
    place-self: center;
    width: 100%;
    height: 100%;
}
#security_level > .head .security_level > input, #main h1, #main .h1, #main button[type=roll].h1, #main button[type=action].h1{
    font-size: 2em;
    display: block;
    font-family: Baumans;
}
#security_level > .head *:not(input) {
    color: var(--fontColor);
}
.fillTrack .separated-label:before, .fillTrack .separated-span:before {
    background-color: var(--selectedRadio);
}

.fillTrack .separated-label:checked ~ .separated-label:before, .fillTrack .separated-span:checked ~ .separated-label:before {
    background-color: white;
}

.action{
    display: grid;
    grid-template-columns: repeat(3, 1fr); /* Three columns with equal width */
}
:is(#knowledges, #skills, #abilities) > div {
    position: relative;
    display: inline-grid;
    width: 100%;
    grid-template-columns: 1fr 2rem 2rem;
    grid-gap: var(--half-gap);
    margin-bottom: var(--half-gap);
}
:is(#knowledges, #skills, #abilities) > div > label {
    place-self: center start;
}
:is(#knowledges, #skills, #abilities) > div > .underlined {
    align-self: center;
    width: 100%;
}
:is(#knowledges, #skills, #abilities, #melee-mult) > div > input[name*=self_mod] {
    opacity: 0;
    z-index: 10;
    transition: var(--inputSwap);
    position: absolute;
    grid-column: 3/4;
}
:is(#knowledges, #skills, #abilities, #melee-mult) > div > input[name*=self_mod]:hover {
    opacity: 100;
}

:is(#knowledges, #skills, #abilities, #melee-mult) > div > input[name*=self_mod]:hover ~ input{
    opacity: 0;
}
.underlined.thick {
    border-bottom-width: 5px;
}
.action .thick {
    padding-bottom: var(--half-gap);
}
.action {
    column-width: 255px;
    column-gap: var(--grid-gap);
    column-rule: 1px solid black;
}
.perksRoller:hover{
    color:var(--backColor)
}
.roller:hover{
    color:var(--backColor)
}


.popup {
    display: none;
    position: absolute;
    top: 40vh;
    left: 40vh;
    transform: translate(-50%, -50%);
    background-color: #333333;
    color: white;
    padding: 20px;
    border: 1px solid black;
    z-index: 1000;
    width: 20em;
}

/* Styles pour le contenu de la popup */
.popup-content {
    max-width: 400px; /* ajustez la largeur selon vos besoins */
}

/* Styles pour le bouton de fermeture */
.closePopup, .closeDamagePopup {
    position: absolute;
    top: 5px;
    right: 10px;
    cursor: pointer;
}

.message-content {
    --templateRadius: 0.8125rem;
    --dieSize: 50px;
    --templateBorderW: 2px 5px 2px 5px;
    --fumbleColor: red;
    --critColor: green;
    --innerBorderRadius: 5px;
}
.message-content .sheet-scp {
    border: solid black;
    overflow: hidden;
    border-width: var(--templateBorderW);
    background-color: var(--backColor);
    color: var(--fontColor);
}

.message-content .sheet-scp .sheet-template-head {
    color: var(--fontColor);
    display: grid;
    grid-template-rows: auto auto;
    grid-gap: 5px;
    padding: 5px;
}
.message-content .sheet-scp .sheet-template-head:not(.sheet-element) {
    grid-template-columns: 39px 1fr;
    grid-template-areas:
        "black-logo roll_name"
        "black-logo character_name";
}
.message-content .sheet-scp .sheet-template-head .sheet-black-logo {
    grid-area: black-logo;
    place-self: start stretch;
}

.message-content .sheet-black-logo {
    aspect-ratio: 1 / 1;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "content";
}

.message-content .sheet-black-logo .sheet-logo {
    grid-area: content;
    background-image: url(https://s3.amazonaws.com/files.d20.io/images/237119632/ALMH-rWYBVVqwtIQI970xw/original.png);
    background-repeat: no-repeat;
    background-size: contain;
    z-index: 10;
}
.message-content .sheet-black-logo .sheet-black-diamond {
    grid-area: content;
    background-color: black;
    width: 100%;
    height: 100%;
    transform: scale(0.75) rotate(45deg);
}
.message-content .sheet-scp .sheet-template-head .sheet-roll_name {
    grid-area: roll_name;
    place-self: center end;
}
.message-content .sheet-scp .sheet-template-head .sheet-character_name {
    grid-area: character_name;
    place-self: start end;
}
.message-content .sheet-scp .sheet-roll-content {
    background-color: white;
    padding: 2px;
}

.message-content .sheet-scp .sheet-results {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    align-items: center;
    padding-left: 5px;
}
.message-content .sheet-continuation .sheet-result-values {
    width: 100%;
}
.message-content .sheet-result-values {
    display: inline-flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-items: center;
}
.message-content .sheet-scp > .sheet-total {
    position: relative;
    display: grid;
    place-items: center;
    color: black;
    grid-template-columns: 106px 50px 10px 70px;
    grid-template-rows: auto 1fr 1fr;
    grid-template-areas:
        "high-label . . total-label"
        "high modifier . total "
        "high ones . total ";
    place-content: stretch center;
    padding: 5px;
}
.message-content .sheet-scp > .sheet-total > .sheet-high-label {
    grid-area: high-label;
}
.message-content .sheet-scp > .sheet-total > .sheet-high-dice {
    border-radius: var(--templateRadius);
    grid-area: high;
    justify-self: end;
    place-self: stretch;
    display: flex;
    justify-content: space-around;
}
.message-content .sheet-total > .sheet-high-dice, .message-content .sheet-scp > .sheet-total > .sheet-total-value {
    background-color: white;
    border-color: var(--borderColor);
    border-style: solid;
}
.message-content .sheet-scp > .sheet-total > .sheet-high-dice {
    border-radius: var(--templateRadius);
    grid-area: high;
    justify-self: end;
    place-self: stretch;
    display: flex;
    justify-content: space-around;
}

.message-content .sheet-total > .sheet-modifier, .message-content .sheet-scp > .sheet-total > .sheet-ones {
    background-color: white;
    border-color: black;
    border-style: solid;
    display: grid;
    place-self: stretch;
    place-content: center;
    position: relative;
    left: -5px;

}

.message-content .sheet-scp > .sheet-total .sheet-modifier {
    grid-area: modifier;
    border-radius: var(--templateRadius);
}
.message-content .sheet-scp > .sheet-total .sheet-ones {
    grid-area: ones;
    border-radius: var(--templateRadius);
}

.message-content .sheet-scp > .sheet-total > .sheet-total-label {
    grid-area: total-label;
}

.message-content .sheet-scp > .sheet-total > .sheet-total-value {
    grid-area: total;
    padding: 5px;
    display: grid;
    place-content: center;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
}
.message-content .sheet-scp > .sheet-total > .sheet-total-value {
    border-radius: var(--templateRadius);
}
.message-content .malus{
    color: red;
}
.message-content{
    text-transform: capitalize;
}

.message-content h5{
    margin: 0;
}

.message-content .sheet-roll-content{
    height: 4em;
}

.message-content .dice-tooltip .dice-rolls .roll {
    background-size: 2em;
    width: 2em;
    height: 2em;
    align-items: center;
    display: grid;
}
.message-content .dice-tooltip {
    align-items: center;
    display: grid;
    color: black;
    height: auto;
}
.message-content .sheet-scp .sheet-roll-buttons {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
    padding: 2px;
}
.message-content .sheet-scp .sheet-roll-buttons input{
    background-color:  var(--buttonBackColor);
    border-radius: var(--templateRadius);
    border-width: 2px 5px 2px 5px;
    border-color: black;
    text-transform: uppercase;
    color: var(--selectColor);
    text-shadow: var(--selectShadow);
    font-weight: bold;
    font-size: x-small;
}
.message-content .sheet-scp .sheet-color-cond * {
    color: var(--fontColor);
}
.message-content p {
    margin: 0;
}
#section-tabs {
    position: sticky;
    top: -1px;
    border-radius: 5px;
    background-color: #adadad;
    display: inline-flex;
    flex-direction: column;
    float: left;
}
#section-tabs > .section-control {
    color: black;
    padding: 5px;
    border-radius: 5px;
    border: 1px solid transparent;
    transform: rotate(-180deg);
    writing-mode: vertical-rl;
}
#section-tabs input:checked + label, #section-tabs label:hover {
    background-color: var(--backColor);
    color: var(--fontColor);
}

#weapons{
    display: none;
}
#weapons > h4:not(input) {
    grid-area: header;
    text-align: left;
    padding-left: 1rem;
    border: solid black;
    border-width: 2px 1px;
}
#weapons .number {
    width: 3rem;
    height: 1.5rem;
    border-radius: 10px 10px 10px 10px;
    margin-top: 5px;
    margin-bottom: 5px;

}
.input-label:not(:is(.stacked, .right)), .sheet-rolltemplate-scp .input-label:not(:is(.stacked, .right)) {
    grid-template-columns: auto 1fr;
    grid-template-rows: auto;
    grid-template-areas: "left right";
}

#multiplier {
    display:flex;
    justify-content: space-around;
    border: solid black;

}
#attributesValues {
    display: flex; /* Utilisation de flexbox pour aligner les rectangles horizontalement */
    gap: 20px; /* Espacement entre chaque rectangle */
    text-align: center;
}


.rectangle {
    background-color: #ffffff;
    border: 1px solid #ccc;
    margin-bottom: 10px;
}

.rectangle .left {
    flex: 1;
    padding: 10px;
}

.rectangle .left img {
    max-width: 100%;
    height: auto;
    display: block;
}

.rectangle .right {
    flex: 2;
    padding: 10px;
}

.rectangle .right h2 {
    font-size: 18px;
    margin-bottom: 8px;
}

.rectangle .right p {
    font-size: 15px;
    margin-bottom: 0;
}
.rectangle .right h5 {
    white-space: normal;
}

#listeArmes input[type="radio"]:checked + label {
    border-width: 1px 3px;
    border-style: solid;
    border-color: black;
    border-radius: 5px;
    box-sizing: border-box;
    transition: var(--focusTrans);
    background-color: var(--backColor);
    color: var(--fontColor);
    font-weight: bold;
}

#tableArmes{
    text-align: center;
}


.sheet-scp .sheet-template-head.sheet-element {
    grid-template-columns: 39px 1fr 2fr;
    grid-template-areas:
        "black-logo roll_name roll_name"
        "black-logo element character_name";
}
.sheet-scp .sheet-template-head .sheet-element {
    grid-area: element;
    border-width: 2px 5px;
    border-style: solid;
    border-color: var(--fontColor);
    border-radius: var(--templateRadius);
    background-color: white;
    padding: 0.4063rem;
}

.sheet-scp .sheet-damage {
    display: grid;
    grid-template-columns: repeat(3, 50px);
    grid-template-rows: auto 34px;
    place-content: center;
    grid-column-gap: 10px;
    grid-template-areas:
        "base-label x-label total-label"
        "base-damage x-damage total-damage";
    border-radius: 0 0 var(--innerBorderRadius) var(--innerBorderRadius);
    padding: 2px;
}

.sheet-base-damage{
    grid-area: base-damage
}
.sheet-base-label{
    grid-area: base-label
}
.sheet-x-damage{
    grid-area: x-damage
}
.sheet-x-label{
    grid-area: x-label
}
.sheet-total-damage{
    grid-area: total-damage
}
.sheet-total-label{
    grid-area: total-label
}

.sheet-base-damage, .sheet-x-damage, .sheet-total-damage {
    border-width: 2px 5px;
    border-style: solid;
    border-color: var(--fontColor);
    border-radius: var(--templateRadius);
    background-color: white;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto;
    place-content: center;
}
.sheet-scp .sheet-damage .sheet-x-damage {
    border-width: 2px 5px;
    border-style: solid;
    border-color: var(--fontColor);
    border-radius: var(--templateRadius);
    background-color: white;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto;
    place-content: center;
}


.filters {
    margin-bottom: 10px;
}

#dataTable {
    width: 100%;
    border-collapse: collapse;
}

#dataTable th, #dataTable td {
    border: 1px solid #dddddd;
    padding: 8px;
    text-align: left;
}


#searchInput {
    padding: 5px;
    margin-right: 10px;
}

/* Style optionnel pour marquer les lignes cochÃ©es */
#dataTable input[type="checkbox"]:checked {
    background-color: lightblue;
}

.attributeValues{
    display: flex;
    align-items: end;
    text-align: center;
}

.attributeValues label{
    margin-right: 2px;
    margin-left: 2px;
}

.description{
    min-height: 3em;
}

.editor, .editor-content {
    min-height: 3em;
}
.scp-sheet .editor,.scp-sheet .editor-content {
    min-height: 20em;
}
.prosemirror{
    min-height: 10em;
}

#diceUse, #exertionUse, #launchTarget, #deleteDice{
    color: white;
}
#diceUse > option, #exertionUse > option, #launchTarget > option{
    background: rgba(0, 0, 0, 0.8);
}

.pnj-sheet input{
    width: auto;
}
.pnj-attributes input{
    width: auto;
}
.pnj-sheet div, .pnj-sheet label{
    margin: 1px;
}
.inline-header{
    display: inline-flex;
    text-align: center;
}
.inline-header .charname{
    width: 80%;
}
.inline-header input{
    width: 2em;
}

.pnj-attributes{
    display: grid;
    grid-template-columns: auto auto;
    justify-items: center;
}


.leftPnj{
    display: grid;
    text-align: right;
}
.rightPnj{
    display: grid;
    text-align: right;
}

.pnj-attributes input{
    text-align: left;
}

#pnj-info{
    display: flex;
    justify-content: ;: space-between;
}
#pnj-info input{
    width: 3em;
}
.container{
    display: grid;
    grid-template-rows: auto auto;
    border: 1px solid black;
    text-align: center;
}
#pnj-hp{
    border: 2px solid black;
}
.stats_pnj label{
    display: inline-grid;
    width: 24%;
    justify-items: center;
}
.weaponTable{
    text-align: center;
}
.weaponTable input{
    width: 90%;
}

.diceImage{
    width: 5%;
}

.diceImage img{
    width: 80%;
}

#addWeapon {
    width: 40px;
    height: 40px;
    background-color: dimgray;
    color: white;
    border: none;
    border-radius: 20px 20px 20px 20px;
    cursor: pointer;
    font-size: 20px;
}

.devastation {
    display: flex;
    background-color: dimgray;
    background: radial-gradient(transparent, 80%, grey), linear-gradient(90deg, dimgray, white, dimgray);
    border: 2px solid black;
    justify-content: center;
}

.devastation input {
    display: none;
}

.devastation label {
    font-size: 3rem;
    color: transparent;
    position: relative;
    cursor: pointer;
    transition: color 0.2s ease;
    margin-left: 5px;
}

.devastation label::before {
    content: 'â';
    color: grey;

}


.devastation input:checked ~ label ~ label::before {
    color: grey;
    content: 'â' ;
}


.scpStats{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
}

.scpStats label{
    margin: 5px;
    border: 1px solid black;
}
